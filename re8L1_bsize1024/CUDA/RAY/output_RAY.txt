

        *** GPGPU-Sim Simulator Version 3.2.2  [build 0] ***


GPGPU-Sim PTX: simulation mode 0 (can change with PTX_SIM_MODE_FUNC environment variable:
               1=functional simulation only, 0=detailed performance simulator)
GPGPU-Sim: Configuration options:

-network_mode                           1 # Interconnection network mode
-inter_config_file   config_fermi_islip.icnt # Interconnection network config file
-gpgpu_ptx_use_cuobjdump                    1 # Use cuobjdump to extract ptx and sass from binaries
-gpgpu_experimental_lib_support                    0 # Try to extract code from cuda libraries [Broken because of unknown cudaGetExportTable]
-gpgpu_ptx_convert_to_ptxplus                    0 # Convert SASS (native ISA) to ptxplus and run ptxplus
-gpgpu_ptx_force_max_capability                   20 # Force maximum compute capability
-gpgpu_ptx_inst_debug_to_file                    0 # Dump executed instructions' debug information to file
-gpgpu_ptx_inst_debug_file       inst_debug.txt # Executed instructions' debug output file
-gpgpu_ptx_inst_debug_thread_uid                    1 # Thread UID for executed instructions' debug output
-gpgpu_simd_model                       1 # 1 = post-dominator
-gpgpu_shader_core_pipeline              1536:32 # shader core pipeline config, i.e., {<nthread>:<warpsize>}
-gpgpu_tex_cache:l1  4:128:24,L:R:m:N:L,F:128:4,128:2 # per-shader L1 texture cache  (READ-ONLY) config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>:<rf>}
-gpgpu_const_cache:l1 64:64:2,L:R:f:N:L,A:2:32,4 # per-shader L1 constant memory cache  (READ-ONLY) config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>} 
-gpgpu_cache:il1     4:128:4,L:R:f:N:L,A:2:32,4 # shader L1 instruction cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>} 
-gpgpu_cache:dl1     32:1024:4,L:L:m:N:H,A:32:8,8 # per-shader L1 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq> | none}
-gpgpu_cache:dl1PrefL1                 none # per-shader L1 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq> | none}
-gpgpu_cache:dl1PreShared                 none # per-shader L1 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq> | none}
-gmem_skip_L1D                          0 # global memory access skip L1D cache (implements -Xptxas -dlcm=cg, default=no skip)
-gpgpu_perfect_mem                      0 # enable perfect memory mode (no cache miss)
-n_regfile_gating_group                    4 # group of lanes that should be read/written together)
-gpgpu_clock_gated_reg_file                    0 # enable clock gated reg file for power calculations
-gpgpu_clock_gated_lanes                    0 # enable clock gated lanes for power calculations
-gpgpu_shader_registers                32768 # Number of registers per shader core. Limits number of concurrent CTAs. (default 8192)
-gpgpu_shader_cta                       8 # Maximum number of concurrent CTAs in shader (default 8)
-gpgpu_num_cta_barriers                   16 # Maximum number of named barriers per CTA (default 16)
-gpgpu_n_clusters                      15 # number of processing clusters
-gpgpu_n_cores_per_cluster                    1 # number of simd cores per cluster
-gpgpu_n_cluster_ejection_buffer_size                    8 # number of packets in ejection buffer
-gpgpu_n_ldst_response_buffer_size                    2 # number of response packets in ld/st unit ejection buffer
-gpgpu_shmem_size                   16384 # Size of shared memory per shader core (default 16kB)
-gpgpu_shmem_size                   49152 # Size of shared memory per shader core (default 16kB)
-gpgpu_shmem_size_PrefL1                16384 # Size of shared memory per shader core (default 16kB)
-gpgpu_shmem_size_PrefShared                16384 # Size of shared memory per shader core (default 16kB)
-gpgpu_shmem_num_banks                   32 # Number of banks in the shared memory in each shader core (default 16)
-gpgpu_shmem_limited_broadcast                    0 # Limit shared memory to do one broadcast per cycle (default on)
-gpgpu_shmem_warp_parts                    1 # Number of portions a warp is divided into for shared memory bank conflict check 
-gpgpu_warpdistro_shader                   -1 # Specify which shader core to collect the warp size distribution from
-gpgpu_warp_issue_shader                    0 # Specify which shader core to collect the warp issue distribution from
-gpgpu_local_mem_map                    1 # Mapping from local memory space address to simulated GPU physical address space (default = enabled)
-gpgpu_num_reg_banks                   16 # Number of register banks (default = 8)
-gpgpu_reg_bank_use_warp_id                    0 # Use warp ID in mapping registers to banks (default = off)
-gpgpu_operand_collector_num_units_sp                    6 # number of collector units (default = 4)
-gpgpu_operand_collector_num_units_sfu                    8 # number of collector units (default = 4)
-gpgpu_operand_collector_num_units_mem                    2 # number of collector units (default = 2)
-gpgpu_operand_collector_num_units_gen                    0 # number of collector units (default = 0)
-gpgpu_operand_collector_num_in_ports_sp                    2 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_in_ports_sfu                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_in_ports_mem                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_in_ports_gen                    0 # number of collector unit in ports (default = 0)
-gpgpu_operand_collector_num_out_ports_sp                    2 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_out_ports_sfu                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_out_ports_mem                    1 # number of collector unit in ports (default = 1)
-gpgpu_operand_collector_num_out_ports_gen                    0 # number of collector unit in ports (default = 0)
-gpgpu_coalesce_arch                   13 # Coalescing arch (default = 13, anything else is off for now)
-gpgpu_num_sched_per_core                    2 # Number of warp schedulers per core
-gpgpu_max_insn_issue_per_warp                    1 # Max number of instructions that can be issued per warp in one cycle by scheduler
-gpgpu_simt_core_sim_order                    1 # Select the simulation order of cores in a cluster (0=Fix, 1=Round-Robin)
-gpgpu_pipeline_widths        2,1,1,2,1,1,2 # Pipeline widths ID_OC_SP,ID_OC_SFU,ID_OC_MEM,OC_EX_SP,OC_EX_SFU,OC_EX_MEM,EX_WB
-gpgpu_num_sp_units                     2 # Number of SP units (default=1)
-gpgpu_num_sfu_units                    1 # Number of SF units (default=1)
-gpgpu_num_mem_units                    1 # Number if ldst units (default=1) WARNING: not hooked up to anything
-gpgpu_scheduler                      gto # Scheduler configuration: < lrr | gto | two_level_active > If two_level_active:<num_active_warps>:<inner_prioritization>:<outer_prioritization>For complete list of prioritization values see shader.h enum scheduler_prioritization_typeDefault: gto
-gpgpu_dram_scheduler                    1 # 0 = fifo, 1 = FR-FCFS (defaul)
-gpgpu_dram_partition_queues              8:8:8:8 # i2$:$2d:d2$:$2i
-l2_ideal                               0 # Use a ideal L2 cache that always hit
-gpgpu_cache:dl2     32:1024:2,L:B:m:W:L,A:32:4,4:0,32 # unified banked L2 data cache config  {<nsets>:<bsize>:<assoc>,<rep>:<wr>:<alloc>:<wr_alloc>,<mshr>:<N>:<merge>,<mq>}
-gpgpu_cache:dl2_texture_only                    0 # L2 cache used for texture only
-gpgpu_n_mem                            6 # number of memory modules (e.g. memory controllers) in gpu
-gpgpu_n_sub_partition_per_mchannel                    2 # number of memory subpartition in each memory module
-gpgpu_n_mem_per_ctrlr                    2 # number of memory chips per memory controller
-gpgpu_memlatency_stat                   14 # track and display latency statistics 0x2 enables MC, 0x4 enables queue logs
-gpgpu_frfcfs_dram_sched_queue_size                   16 # 0 = unlimited (default); # entries per chip
-gpgpu_dram_return_queue_size                  116 # 0 = unlimited (default); # entries per chip
-gpgpu_dram_buswidth                    4 # default = 4 bytes (8 bytes per cycle at DDR)
-gpgpu_dram_burst_length                    8 # Burst length of each DRAM request (default = 4 data bus cycle)
-dram_data_command_freq_ratio                    4 # Frequency ratio between DRAM data bus and command bus (default = 2 times, i.e. DDR)
-gpgpu_dram_timing_opt nbk=16:CCD=2:RRD=6:RCD=12:RAS=28:RP=12:RC=40: CL=12:WL=4:CDLR=5:WR=12:nbkgrp=4:CCDL=3:RTPL=2 # DRAM timing parameters = {nbk:tCCD:tRRD:tRCD:tRAS:tRP:tRC:CL:WL:tCDLR:tWR:nbkgrp:tCCDL:tRTPL}
-rop_latency                          120 # ROP queue latency (default 85)
-dram_latency                         100 # DRAM latency (default 30)
-gpgpu_mem_addr_mapping dramid@8;00000000.00000000.00000000.00000000.0000RRRR.RRRRRRRR.BBBCCCCB.CCSSSSSS # mapping memory address to dram model {dramid@<start bit>;<memory address map>}
-gpgpu_mem_addr_test                    0 # run sweep test to check address mapping for aliased address
-gpgpu_mem_address_mask                    1 # 0 = old addressing mask, 1 = new addressing mask, 2 = new add. mask + flipped bank sel and chip sel bits
-gpuwattch_xml_file  gpuwattch_gtx480.xml # GPUWattch XML file
-power_simulation_enabled                    0 # Turn on power simulator (1=On, 0=Off)
-power_per_cycle_dump                    0 # Dump detailed power output each cycle
-power_trace_enabled                    0 # produce a file for the power trace (1=On, 0=Off)
-power_trace_zlevel                     6 # Compression level of the power trace output log (0=no comp, 9=highest)
-steady_power_levels_enabled                    0 # produce a file for the steady power levels (1=On, 0=Off)
-steady_state_definition                  8:4 # allowed deviation:number of samples
-gpgpu_max_cycle                        0 # terminates gpu simulation early (0 = no limit)
-gpgpu_max_insn                         0 # terminates gpu simulation early (0 = no limit)
-gpgpu_max_cta                          0 # terminates gpu simulation early (0 = no limit)
-gpgpu_runtime_stat                   500 # display runtime statistics such as dram utilization {<freq>:<flag>}
-liveness_message_freq                    1 # Minimum number of seconds between simulation liveness messages (0 = always print)
-gpgpu_flush_l1_cache                    0 # Flush L1 cache at the end of each kernel call
-gpgpu_flush_l2_cache                    0 # Flush L2 cache at the end of each kernel call
-gpgpu_deadlock_detect                    1 # Stop the simulation at deadlock (1=on (default), 0=off)
-gpgpu_ptx_instruction_classification                    0 # if enabled will classify ptx instruction types per kernel (Max 255 kernels now)
-gpgpu_ptx_sim_mode                     0 # Select between Performance (default) or Functional simulation (1)
-gpgpu_clock_domains 700.0:700.0:700.0:924.0 # Clock Domain Frequencies in MhZ {<Core Clock>:<ICNT Clock>:<L2 Clock>:<DRAM Clock>}
-gpgpu_max_concurrent_kernel                    8 # maximum kernels that can run concurrently on GPU
-gpgpu_cflog_interval                    0 # Interval between each snapshot in control flow logger
-visualizer_enabled                     0 # Turn on visualizer output (1=On, 0=Off)
-visualizer_outputfile                 NULL # Specifies the output log file for visualizer
-visualizer_zlevel                      6 # Compression level of the visualizer output log (0=no comp, 9=highest)
-trace_enabled                          0 # Turn on traces
-trace_components                    none # comma seperated list of traces to enable. Complete list found in trace_streams.tup. Default none
-trace_sampling_core                    0 # The core which is printed using CORE_DPRINTF. Default 0
-trace_sampling_memory_partition                   -1 # The memory partition which is printed using MEMPART_DPRINTF. Default -1 (i.e. all)
-enable_ptx_file_line_stats                    1 # Turn on PTX source line statistic profiling. (1 = On)
-ptx_line_stats_filename gpgpu_inst_stats.txt # Output file for PTX source line statistics.
-save_embedded_ptx                      0 # saves ptx files embedded in binary as <n>.ptx
-keep                                   0 # keep intermediate files created by GPGPU-Sim when interfacing with external programs
-gpgpu_ptx_save_converted_ptxplus                    0 # Saved converted ptxplus to a file
-ptx_opcode_latency_int         4,13,4,5,145 # Opcode latencies for integers <ADD,MAX,MUL,MAD,DIV>Default 1,1,19,25,145
-ptx_opcode_latency_fp          4,13,4,5,39 # Opcode latencies for single precision floating points <ADD,MAX,MUL,MAD,DIV>Default 1,1,1,1,30
-ptx_opcode_latency_dp         8,19,8,8,330 # Opcode latencies for double precision floating points <ADD,MAX,MUL,MAD,DIV>Default 8,8,8,8,335
-ptx_opcode_initiation_int            1,2,2,1,8 # Opcode initiation intervals for integers <ADD,MAX,MUL,MAD,DIV>Default 1,1,4,4,32
-ptx_opcode_initiation_fp            1,2,1,1,4 # Opcode initiation intervals for single precision floating points <ADD,MAX,MUL,MAD,DIV>Default 1,1,1,1,5
-ptx_opcode_initiation_dp         8,16,8,8,130 # Opcode initiation intervals for double precision floating points <ADD,MAX,MUL,MAD,DIV>Default 8,8,8,8,130
DRAM Timing Options:
nbk                                    16 # number of banks
CCD                                     2 # column to column delay
RRD                                     6 # minimal delay between activation of rows in different banks
RCD                                    12 # row to column delay
RAS                                    28 # time needed to activate row
RP                                     12 # time needed to precharge (deactivate) row
RC                                     40 # row cycle time
CDLR                                    5 # switching from write to read (changes tWTR)
WR                                     12 # last data-in to row precharge
CL                                     12 # CAS latency
WL                                      4 # Write latency
nbkgrp                                  4 # number of bank groups
CCDL                                    3 # column to column delay between accesses to different bank groups
RTPL                                    2 # read to precharge delay between accesses to different bank groups
Total number of memory sub partition = 12
addr_dec_mask[CHIP]  = 0000000000000000 	high:64 low:0
addr_dec_mask[BK]    = 000000000000e100 	high:16 low:8
addr_dec_mask[ROW]   = 000000000fff0000 	high:28 low:16
addr_dec_mask[COL]   = 0000000000001eff 	high:13 low:0
addr_dec_mask[BURST] = 000000000000003f 	high:6 low:0
sub_partition_id_mask = 0000000000000100
GPGPU-Sim uArch: clock freqs: 700000000.000000:700000000.000000:700000000.000000:924000000.000000
GPGPU-Sim uArch: clock periods: 0.00000000142857142857:0.00000000142857142857:0.00000000142857142857:0.00000000108225108225
*** Initializing Memory Statistics ***
GPGPU-Sim uArch: interconnect node map (shaderID+MemID to icntID)
GPGPU-Sim uArch: Memory nodes ID start from index: 15
GPGPU-Sim uArch:    0   1   2   3   4
GPGPU-Sim uArch:    5   6   7   8   9
GPGPU-Sim uArch:   10  11  12  13  14
GPGPU-Sim uArch:   15  16  17  18  19
GPGPU-Sim uArch:   20  21  22  23  24
GPGPU-Sim uArch:   25  26
GPGPU-Sim uArch: interconnect node reverse map (icntID to shaderID+MemID)
GPGPU-Sim uArch: Memory nodes start from ID: 15
GPGPU-Sim uArch:    0   1   2   3   4
GPGPU-Sim uArch:    5   6   7   8   9
GPGPU-Sim uArch:   10  11  12  13  14
GPGPU-Sim uArch:   15  16  17  18  19
GPGPU-Sim uArch:   20  21  22  23  24
GPGPU-Sim uArch:   25  26
316bcbff5f8f022bb22b20bb4721e93e  /sciclone/data20/adwait/applications/benchmarks/CUDA/RAY/gpgpu_ptx_sim__RAY
GPGPU-Sim uArch: performance model initialization complete.
GPGPU-Sim PTX: __cudaRegisterFatBinary, fat_cubin_handle = 1, filename=rayTracing.cu
self exe links to: /sciclone/data20/adwait/applications/benchmarks/CUDA/RAY/gpgpu_ptx_sim__RAY
Running md5sum using "md5sum /sciclone/data20/adwait/applications/benchmarks/CUDA/RAY/gpgpu_ptx_sim__RAY "
Parsing file _cuobjdump_complete_output_wezoiI
######### cuobjdump parser ########
## Adding new section ELF
Adding arch: sm_20
Adding identifier: rayTracing.cu
## Adding new section PTX
Adding ptx filename: _cuobjdump_1.ptx
Adding arch: sm_20
Adding identifier: rayTracing.cu
Done parsing!!!
GPGPU-Sim PTX: __cudaRegisterFunction _Z6renderPjP4Nodejjff : hostFun 0x0x40ce13, fat_cubin_handle = 1
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaretf__Zmi6float3S_" from 0x0 to 0xc
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf1__Zmi6float3S_" from 0xc to 0x18
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf2__Zmi6float3S_" from 0x18 to 0x24
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaretf__Z9normalize6float3" from 0x0 to 0xc
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf1__Z9normalize6float3" from 0xc to 0x18
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaretf__Z18intersectionSphere5Rayon6float3f" from 0x0 to 0x4
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf1__Z18intersectionSphere5Rayon6float3f" from 0x4 to 0x1c
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf2__Z18intersectionSphere5Rayon6float3f" from 0x1c to 0x28
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf3__Z18intersectionSphere5Rayon6float3f" from 0x28 to 0x2c
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaretf__Z16intersectionPlan5Rayon6float3S0_" from 0x0 to 0x4
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf1__Z16intersectionPlan5Rayon6float3S0_" from 0x4 to 0x1c
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf2__Z16intersectionPlan5Rayon6float3S0_" from 0x1c to 0x28
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf3__Z16intersectionPlan5Rayon6float3S0_" from 0x28 to 0x34
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaretf__Z10getNormale6float3S_" from 0x0 to 0xc
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf1__Z10getNormale6float3S_" from 0xc to 0x18
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf2__Z10getNormale6float3S_" from 0x18 to 0x24
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaretf__Z11getNormaleP6float3" from 0x0 to 0xc
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf1__Z11getNormaleP6float3" from 0xc to 0x18
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaretf__Z14rgbaFloatToInt6float4" from 0x0 to 0x4
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf1__Z14rgbaFloatToInt6float4" from 0x4 to 0x14
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaretf__Z12notShadowRayP4Node6float3S1_f" from 0x0 to 0x4
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf1__Z12notShadowRayP4Node6float3S1_f" from 0x4 to 0xc
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf2__Z12notShadowRayP4Node6float3S1_f" from 0xc to 0x18
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf3__Z12notShadowRayP4Node6float3S1_f" from 0x18 to 0x24
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf4__Z12notShadowRayP4Node6float3S1_f" from 0x24 to 0x28
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaretf__Z15float2int_pow20f" from 0x0 to 0x4
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf1__Z15float2int_pow20f" from 0x4 to 0x8
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaretf__Z15float2int_pow50f" from 0x0 to 0x4
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf1__Z15float2int_pow50f" from 0x4 to 0x8
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf1__ZN4dim3C1Ejjj" from 0x0 to 0x8
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf2__ZN4dim3C1Ejjj" from 0x8 to 0xc
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf3__ZN4dim3C1Ejjj" from 0xc to 0x10
GPGPU-Sim PTX: allocating stack frame region for .param "__cudaparmf4__ZN4dim3C1Ejjj" from 0x10 to 0x14
GPGPU-Sim PTX: instruction assembly for function '_Zmi6float3S_'...   done.
GPGPU-Sim PTX: finding reconvergence points for '_Zmi6float3S_'...
GPGPU-Sim PTX: Finding dominators for '_Zmi6float3S_'...
GPGPU-Sim PTX: Finding immediate dominators for '_Zmi6float3S_'...
GPGPU-Sim PTX: Finding postdominators for '_Zmi6float3S_'...
GPGPU-Sim PTX: Finding immediate postdominators for '_Zmi6float3S_'...
GPGPU-Sim PTX: pre-decoding instructions for '_Zmi6float3S_'...
GPGPU-Sim PTX: reconvergence points for _Zmi6float3S_...
GPGPU-Sim PTX: ... end of reconvergence points for _Zmi6float3S_
GPGPU-Sim PTX: ... done pre-decoding instructions for '_Zmi6float3S_'.
GPGPU-Sim PTX: instruction assembly for function '_Z9normalize6float3'...   done.
GPGPU-Sim PTX: finding reconvergence points for '_Z9normalize6float3'...
GPGPU-Sim PTX: Finding dominators for '_Z9normalize6float3'...
GPGPU-Sim PTX: Finding immediate dominators for '_Z9normalize6float3'...
GPGPU-Sim PTX: Finding postdominators for '_Z9normalize6float3'...
GPGPU-Sim PTX: Finding immediate postdominators for '_Z9normalize6float3'...
GPGPU-Sim PTX: pre-decoding instructions for '_Z9normalize6float3'...
GPGPU-Sim PTX: reconvergence points for _Z9normalize6float3...
GPGPU-Sim PTX: ... end of reconvergence points for _Z9normalize6float3
GPGPU-Sim PTX: ... done pre-decoding instructions for '_Z9normalize6float3'.
GPGPU-Sim PTX: instruction assembly for function '_Z18intersectionSphere5Rayon6float3f'...   done.
GPGPU-Sim PTX: finding reconvergence points for '_Z18intersectionSphere5Rayon6float3f'...
GPGPU-Sim PTX: Finding dominators for '_Z18intersectionSphere5Rayon6float3f'...
GPGPU-Sim PTX: Finding immediate dominators for '_Z18intersectionSphere5Rayon6float3f'...
GPGPU-Sim PTX: Finding postdominators for '_Z18intersectionSphere5Rayon6float3f'...
GPGPU-Sim PTX: Finding immediate postdominators for '_Z18intersectionSphere5Rayon6float3f'...
GPGPU-Sim PTX: pre-decoding instructions for '_Z18intersectionSphere5Rayon6float3f'...
GPGPU-Sim PTX: reconvergence points for _Z18intersectionSphere5Rayon6float3f...
GPGPU-Sim PTX:  1 (potential) branch divergence @  PC=0x250 (_1.ptx:173) @%p2 bra $Lt_2_3074;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2c0 (_1.ptx:193) mov.f32 %f39, %f32;
GPGPU-Sim PTX:  2 (potential) branch divergence @  PC=0x260 (_1.ptx:175) bra.uni $Lt_2_2818;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2c0 (_1.ptx:193) mov.f32 %f39, %f32;
GPGPU-Sim PTX:  3 (potential) branch divergence @  PC=0x280 (_1.ptx:180) @!%p3 bra $Lt_2_3586;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2c0 (_1.ptx:193) mov.f32 %f39, %f32;
GPGPU-Sim PTX:  4 (potential) branch divergence @  PC=0x290 (_1.ptx:182) bra.uni $Lt_2_3330;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2c0 (_1.ptx:193) mov.f32 %f39, %f32;
GPGPU-Sim PTX: ... end of reconvergence points for _Z18intersectionSphere5Rayon6float3f
GPGPU-Sim PTX: ... done pre-decoding instructions for '_Z18intersectionSphere5Rayon6float3f'.
GPGPU-Sim PTX: instruction assembly for function '_Z16intersectionPlan5Rayon6float3S0_'...   done.
GPGPU-Sim PTX: finding reconvergence points for '_Z16intersectionPlan5Rayon6float3S0_'...
GPGPU-Sim PTX: Finding dominators for '_Z16intersectionPlan5Rayon6float3S0_'...
GPGPU-Sim PTX: Finding immediate dominators for '_Z16intersectionPlan5Rayon6float3S0_'...
GPGPU-Sim PTX: Finding postdominators for '_Z16intersectionPlan5Rayon6float3S0_'...
GPGPU-Sim PTX: Finding immediate postdominators for '_Z16intersectionPlan5Rayon6float3S0_'...
GPGPU-Sim PTX: pre-decoding instructions for '_Z16intersectionPlan5Rayon6float3S0_'...
GPGPU-Sim PTX: reconvergence points for _Z16intersectionPlan5Rayon6float3S0_...
GPGPU-Sim PTX:  1 (potential) branch divergence @  PC=0x320 (_1.ptx:214) @!%p1 bra $Lt_3_2050;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x368 (_1.ptx:227) mov.f32 %f14, %f9;
GPGPU-Sim PTX:  2 (potential) branch divergence @  PC=0x330 (_1.ptx:216) bra.uni $Lt_3_1794;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x368 (_1.ptx:227) mov.f32 %f14, %f9;
GPGPU-Sim PTX: ... end of reconvergence points for _Z16intersectionPlan5Rayon6float3S0_
GPGPU-Sim PTX: ... done pre-decoding instructions for '_Z16intersectionPlan5Rayon6float3S0_'.
GPGPU-Sim PTX: instruction assembly for function '_Z10getNormale6float3S_'...   done.
GPGPU-Sim PTX: finding reconvergence points for '_Z10getNormale6float3S_'...
GPGPU-Sim PTX: Finding dominators for '_Z10getNormale6float3S_'...
GPGPU-Sim PTX: Finding immediate dominators for '_Z10getNormale6float3S_'...
GPGPU-Sim PTX: Finding postdominators for '_Z10getNormale6float3S_'...
GPGPU-Sim PTX: Finding immediate postdominators for '_Z10getNormale6float3S_'...
GPGPU-Sim PTX: pre-decoding instructions for '_Z10getNormale6float3S_'...
GPGPU-Sim PTX: reconvergence points for _Z10getNormale6float3S_...
GPGPU-Sim PTX: ... end of reconvergence points for _Z10getNormale6float3S_
GPGPU-Sim PTX: ... done pre-decoding instructions for '_Z10getNormale6float3S_'.
GPGPU-Sim PTX: instruction assembly for function '_Z11getNormaleP6float3'...   done.
GPGPU-Sim PTX: finding reconvergence points for '_Z11getNormaleP6float3'...
GPGPU-Sim PTX: Finding dominators for '_Z11getNormaleP6float3'...
GPGPU-Sim PTX: Finding immediate dominators for '_Z11getNormaleP6float3'...
GPGPU-Sim PTX: Finding postdominators for '_Z11getNormaleP6float3'...
GPGPU-Sim PTX: Finding immediate postdominators for '_Z11getNormaleP6float3'...
GPGPU-Sim PTX: pre-decoding instructions for '_Z11getNormaleP6float3'...
GPGPU-Sim PTX: reconvergence points for _Z11getNormaleP6float3...
GPGPU-Sim PTX: ... end of reconvergence points for _Z11getNormaleP6float3
GPGPU-Sim PTX: ... done pre-decoding instructions for '_Z11getNormaleP6float3'.
GPGPU-Sim PTX: instruction assembly for function '_Z14rgbaFloatToInt6float4'...   done.
GPGPU-Sim PTX: finding reconvergence points for '_Z14rgbaFloatToInt6float4'...
GPGPU-Sim PTX: Finding dominators for '_Z14rgbaFloatToInt6float4'...
GPGPU-Sim PTX: Finding immediate dominators for '_Z14rgbaFloatToInt6float4'...
GPGPU-Sim PTX: Finding postdominators for '_Z14rgbaFloatToInt6float4'...
GPGPU-Sim PTX: Finding immediate postdominators for '_Z14rgbaFloatToInt6float4'...
GPGPU-Sim PTX: pre-decoding instructions for '_Z14rgbaFloatToInt6float4'...
GPGPU-Sim PTX: reconvergence points for _Z14rgbaFloatToInt6float4...
GPGPU-Sim PTX: ... end of reconvergence points for _Z14rgbaFloatToInt6float4
GPGPU-Sim PTX: ... done pre-decoding instructions for '_Z14rgbaFloatToInt6float4'.
GPGPU-Sim PTX: allocating global region for "cnode" from 0x100 to 0x1a0 (global memory space)
GPGPU-Sim PTX: instruction assembly for function '_Z12notShadowRayP4Node6float3S1_f'...   done.
GPGPU-Sim PTX: finding reconvergence points for '_Z12notShadowRayP4Node6float3S1_f'...
GPGPU-Sim PTX: Finding dominators for '_Z12notShadowRayP4Node6float3S1_f'...
GPGPU-Sim PTX: Finding immediate dominators for '_Z12notShadowRayP4Node6float3S1_f'...
GPGPU-Sim PTX: Finding postdominators for '_Z12notShadowRayP4Node6float3S1_f'...
GPGPU-Sim PTX: Finding immediate postdominators for '_Z12notShadowRayP4Node6float3S1_f'...
GPGPU-Sim PTX: pre-decoding instructions for '_Z12notShadowRayP4Node6float3S1_f'...
GPGPU-Sim PTX: reconvergence points for _Z12notShadowRayP4Node6float3S1_f...
GPGPU-Sim PTX:  1 (potential) branch divergence @  PC=0x638 (_1.ptx:364) @%p1 bra $Lt_7_8450;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x828 (_1.ptx:441) mov.f32 %f58, 0f00000000;    // 0
GPGPU-Sim PTX:  2 (potential) branch divergence @  PC=0x658 (_1.ptx:369) @!%p2 bra $Lt_7_8962;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x6b8 (_1.ptx:385) mov.f32 %f28, %f20;
GPGPU-Sim PTX:  3 (potential) branch divergence @  PC=0x668 (_1.ptx:371) bra.uni $Lt_7_8706;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x6b8 (_1.ptx:385) mov.f32 %f28, %f20;
GPGPU-Sim PTX:  4 (potential) branch divergence @  PC=0x6c0 (_1.ptx:386) bra.uni $Lt_7_8194;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x828 (_1.ptx:441) mov.f32 %f58, 0f00000000;    // 0
GPGPU-Sim PTX:  5 (potential) branch divergence @  PC=0x7b0 (_1.ptx:418) @%p5 bra $Lt_7_9474;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x820 (_1.ptx:438) mov.f32 %f28, %f51;
GPGPU-Sim PTX:  6 (potential) branch divergence @  PC=0x7c0 (_1.ptx:420) bra.uni $Lt_7_9730;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x820 (_1.ptx:438) mov.f32 %f28, %f51;
GPGPU-Sim PTX:  7 (potential) branch divergence @  PC=0x7e0 (_1.ptx:425) @!%p6 bra $Lt_7_9986;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x820 (_1.ptx:438) mov.f32 %f28, %f51;
GPGPU-Sim PTX:  8 (potential) branch divergence @  PC=0x7f0 (_1.ptx:427) bra.uni $Lt_7_9730;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x820 (_1.ptx:438) mov.f32 %f28, %f51;
GPGPU-Sim PTX:  9 (potential) branch divergence @  PC=0x838 (_1.ptx:443) @!%p7 bra $Lt_7_10242;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x8e8 (_1.ptx:468) add.s32 %r1, %r1, 1;
GPGPU-Sim PTX: 10 (potential) branch divergence @  PC=0x8d8 (_1.ptx:463) @!%p8 bra $Lt_7_10242;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x8e8 (_1.ptx:468) add.s32 %r1, %r1, 1;
GPGPU-Sim PTX: 11 (potential) branch divergence @  PC=0x908 (_1.ptx:472) @%p9 bra $Lt_7_10754;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x960 (_1.ptx:486) selp.s32 %r10, 1, 0, %p11;
GPGPU-Sim PTX: 12 (potential) branch divergence @  PC=0x930 (_1.ptx:477) @%p10 bra $L_7_7170;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x960 (_1.ptx:486) selp.s32 %r10, 1, 0, %p11;
GPGPU-Sim PTX: 13 (potential) branch divergence @  PC=0x938 (_1.ptx:478) bra.uni $L_7_7938;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x960 (_1.ptx:486) selp.s32 %r10, 1, 0, %p11;
GPGPU-Sim PTX: ... end of reconvergence points for _Z12notShadowRayP4Node6float3S1_f
GPGPU-Sim PTX: ... done pre-decoding instructions for '_Z12notShadowRayP4Node6float3S1_f'.
GPGPU-Sim PTX: instruction assembly for function '_Z15float2int_pow20f'...   done.
GPGPU-Sim PTX: finding reconvergence points for '_Z15float2int_pow20f'...
GPGPU-Sim PTX: Finding dominators for '_Z15float2int_pow20f'...
GPGPU-Sim PTX: Finding immediate dominators for '_Z15float2int_pow20f'...
GPGPU-Sim PTX: Finding postdominators for '_Z15float2int_pow20f'...
GPGPU-Sim PTX: Finding immediate postdominators for '_Z15float2int_pow20f'...
GPGPU-Sim PTX: pre-decoding instructions for '_Z15float2int_pow20f'...
GPGPU-Sim PTX: reconvergence points for _Z15float2int_pow20f...
GPGPU-Sim PTX: ... end of reconvergence points for _Z15float2int_pow20f
GPGPU-Sim PTX: ... done pre-decoding instructions for '_Z15float2int_pow20f'.
GPGPU-Sim PTX: instruction assembly for function '_Z15float2int_pow50f'...   done.
GPGPU-Sim PTX: finding reconvergence points for '_Z15float2int_pow50f'...
GPGPU-Sim PTX: Finding dominators for '_Z15float2int_pow50f'...
GPGPU-Sim PTX: Finding immediate dominators for '_Z15float2int_pow50f'...
GPGPU-Sim PTX: Finding postdominators for '_Z15float2int_pow50f'...
GPGPU-Sim PTX: Finding immediate postdominators for '_Z15float2int_pow50f'...
GPGPU-Sim PTX: pre-decoding instructions for '_Z15float2int_pow50f'...
GPGPU-Sim PTX: reconvergence points for _Z15float2int_pow50f...
GPGPU-Sim PTX: ... end of reconvergence points for _Z15float2int_pow50f
GPGPU-Sim PTX: ... done pre-decoding instructions for '_Z15float2int_pow50f'.
GPGPU-Sim PTX: allocating constant region for "MView" from 0x200 to 0x230 (global memory space) 1
GPGPU-Sim PTX: allocating stack frame region for .local "__cuda___cuda_local_var_35463_9_non_const_pile_32240" from 0x0 to 0x50
GPGPU-Sim PTX: instruction assembly for function '_Z6renderPjP4Nodejjff'...   done.
GPGPU-Sim PTX: finding reconvergence points for '_Z6renderPjP4Nodejjff'...
GPGPU-Sim PTX: Finding dominators for '_Z6renderPjP4Nodejjff'...
GPGPU-Sim PTX: Finding immediate dominators for '_Z6renderPjP4Nodejjff'...
GPGPU-Sim PTX: Finding postdominators for '_Z6renderPjP4Nodejjff'...
GPGPU-Sim PTX: Finding immediate postdominators for '_Z6renderPjP4Nodejjff'...
GPGPU-Sim PTX: pre-decoding instructions for '_Z6renderPjP4Nodejjff'...
GPGPU-Sim PTX: reconvergence points for _Z6renderPjP4Nodejjff...
GPGPU-Sim PTX:  1 (potential) branch divergence @  PC=0xdb0 (_1.ptx:663) @%p1 bra $Lt_10_44034;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2370 (_1.ptx:1495) exit;
GPGPU-Sim PTX:  2 (potential) branch divergence @  PC=0x1028 (_1.ptx:751) @%p2 bra $Lt_10_45570;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x11b8 (_1.ptx:815) mov.f32 %f108, 0f00000000;   // 0
GPGPU-Sim PTX:  3 (potential) branch divergence @  PC=0x1048 (_1.ptx:756) @!%p3 bra $Lt_10_46082;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1090 (_1.ptx:769) mov.f32 %f87, %f82;
GPGPU-Sim PTX:  4 (potential) branch divergence @  PC=0x1058 (_1.ptx:758) bra.uni $Lt_10_45826;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1090 (_1.ptx:769) mov.f32 %f87, %f82;
GPGPU-Sim PTX:  5 (potential) branch divergence @  PC=0x1098 (_1.ptx:770) bra.uni $Lt_10_45314;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x11b8 (_1.ptx:815) mov.f32 %f108, 0f00000000;   // 0
GPGPU-Sim PTX:  6 (potential) branch divergence @  PC=0x1140 (_1.ptx:793) @%p6 bra $Lt_10_46594;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x11b0 (_1.ptx:813) mov.f32 %f87, %f101;
GPGPU-Sim PTX:  7 (potential) branch divergence @  PC=0x1150 (_1.ptx:795) bra.uni $Lt_10_46850;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x11b0 (_1.ptx:813) mov.f32 %f87, %f101;
GPGPU-Sim PTX:  8 (potential) branch divergence @  PC=0x1170 (_1.ptx:800) @!%p7 bra $Lt_10_47106;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x11b0 (_1.ptx:813) mov.f32 %f87, %f101;
GPGPU-Sim PTX:  9 (potential) branch divergence @  PC=0x1180 (_1.ptx:802) bra.uni $Lt_10_46850;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x11b0 (_1.ptx:813) mov.f32 %f87, %f101;
GPGPU-Sim PTX: 10 (potential) branch divergence @  PC=0x11f8 (_1.ptx:823) @%p8 bra $Lt_10_47362;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1210 (_1.ptx:829) add.s32 %r25, %r25, 1;
GPGPU-Sim PTX: 11 (potential) branch divergence @  PC=0x1230 (_1.ptx:833) @%p9 bra $Lt_10_45058;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1238 (_1.ptx:834) mov.f32 %f109, 0f00000000;   // 0
GPGPU-Sim PTX: 12 (potential) branch divergence @  PC=0x1280 (_1.ptx:843) @%p10 bra $Lt_10_48130;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2140 (_1.ptx:1416) add.s32 %r23, %r23, 1;
GPGPU-Sim PTX: 13 (potential) branch divergence @  PC=0x1330 (_1.ptx:868) @%p11 bra $Lt_10_48898;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x13b8 (_1.ptx:888) sub.f32 %f136, %f21, %f119;
GPGPU-Sim PTX: 14 (potential) branch divergence @  PC=0x1350 (_1.ptx:873) bra.uni $Lt_10_48642;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x13b8 (_1.ptx:888) sub.f32 %f136, %f21, %f119;
GPGPU-Sim PTX: 15 (potential) branch divergence @  PC=0x1430 (_1.ptx:903) @!%p12 bra $Lt_10_49410;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1470 (_1.ptx:915) mov.f32 %f153, 0f3d4ccccd;   // 0.05
GPGPU-Sim PTX: 16 (potential) branch divergence @  PC=0x1450 (_1.ptx:908) bra.uni $Lt_10_49154;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1470 (_1.ptx:915) mov.f32 %f153, 0f3d4ccccd;   // 0.05
GPGPU-Sim PTX: 17 (potential) branch divergence @  PC=0x1578 (_1.ptx:949) @!%p13 bra $Lt_10_58114;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2080 (_1.ptx:1388) add.f32 %f399, %f126, %f126;
GPGPU-Sim PTX: 18 (potential) branch divergence @  PC=0x15c0 (_1.ptx:961) @%p14 bra $Lt_10_49922;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x17b0 (_1.ptx:1039) mov.f32 %f221, 0f00000000;   // 0
GPGPU-Sim PTX: 19 (potential) branch divergence @  PC=0x15e0 (_1.ptx:966) @!%p15 bra $Lt_10_50434;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1638 (_1.ptx:982) mov.f32 %f190, %f183;
GPGPU-Sim PTX: 20 (potential) branch divergence @  PC=0x15f0 (_1.ptx:968) bra.uni $Lt_10_50178;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1638 (_1.ptx:982) mov.f32 %f190, %f183;
GPGPU-Sim PTX: 21 (potential) branch divergence @  PC=0x1640 (_1.ptx:983) bra.uni $Lt_10_49666;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x17b0 (_1.ptx:1039) mov.f32 %f221, 0f00000000;   // 0
GPGPU-Sim PTX: 22 (potential) branch divergence @  PC=0x1738 (_1.ptx:1016) @%p18 bra $Lt_10_50946;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x17a8 (_1.ptx:1036) mov.f32 %f190, %f214;
GPGPU-Sim PTX: 23 (potential) branch divergence @  PC=0x1748 (_1.ptx:1018) bra.uni $Lt_10_51202;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x17a8 (_1.ptx:1036) mov.f32 %f190, %f214;
GPGPU-Sim PTX: 24 (potential) branch divergence @  PC=0x1768 (_1.ptx:1023) @!%p19 bra $Lt_10_51458;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x17a8 (_1.ptx:1036) mov.f32 %f190, %f214;
GPGPU-Sim PTX: 25 (potential) branch divergence @  PC=0x1778 (_1.ptx:1025) bra.uni $Lt_10_51202;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x17a8 (_1.ptx:1036) mov.f32 %f190, %f214;
GPGPU-Sim PTX: 26 (potential) branch divergence @  PC=0x17c0 (_1.ptx:1041) @!%p20 bra $Lt_10_58370;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1828 (_1.ptx:1057) add.s32 %r50, %r50, 1;
GPGPU-Sim PTX: 27 (potential) branch divergence @  PC=0x1818 (_1.ptx:1052) @!%p21 bra $Lt_10_58370;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1828 (_1.ptx:1057) add.s32 %r50, %r50, 1;
GPGPU-Sim PTX: 28 (potential) branch divergence @  PC=0x1848 (_1.ptx:1061) @%p22 bra $Lt_10_58882;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1880 (_1.ptx:1071) @!%p23 bra $Lt_10_58114;
GPGPU-Sim PTX: 29 (potential) branch divergence @  PC=0x1860 (_1.ptx:1064) @%p23 bra $L_10_42498;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1880 (_1.ptx:1071) @!%p23 bra $Lt_10_58114;
GPGPU-Sim PTX: 30 (potential) branch divergence @  PC=0x1868 (_1.ptx:1065) bra.uni $L_10_43266;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1880 (_1.ptx:1071) @!%p23 bra $Lt_10_58114;
GPGPU-Sim PTX: 31 (potential) branch divergence @  PC=0x1880 (_1.ptx:1071) @!%p23 bra $Lt_10_58114;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2080 (_1.ptx:1388) add.f32 %f399, %f126, %f126;
GPGPU-Sim PTX: 32 (potential) branch divergence @  PC=0x19c8 (_1.ptx:1115) @!%p24 bra $Lt_10_51714;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2040 (_1.ptx:1375) mov.f32 %f394, 0f3f4ccccd;   // 0.8
GPGPU-Sim PTX: 33 (potential) branch divergence @  PC=0x19d8 (_1.ptx:1118) bra.uni $LDWendi___isnanf_192_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2040 (_1.ptx:1375) mov.f32 %f394, 0f3f4ccccd;   // 0.8
GPGPU-Sim PTX: 34 (potential) branch divergence @  PC=0x19f8 (_1.ptx:1124) @!%p25 bra $Lt_10_7682;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2040 (_1.ptx:1375) mov.f32 %f394, 0f3f4ccccd;   // 0.8
GPGPU-Sim PTX: 35 (potential) branch divergence @  PC=0x1a00 (_1.ptx:1125) bra.uni $Lt_10_7938;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1a20 (_1.ptx:1133) mov.f32 %f272, 0f7f800000;   // ((1.0F)/(0.0F))
GPGPU-Sim PTX: 36 (potential) branch divergence @  PC=0x1a18 (_1.ptx:1130) bra.uni $LDWendi___isnanf_192_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2040 (_1.ptx:1375) mov.f32 %f394, 0f3f4ccccd;   // 0.8
GPGPU-Sim PTX: 37 (potential) branch divergence @  PC=0x1a30 (_1.ptx:1135) @!%p26 bra $Lt_10_52226;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2040 (_1.ptx:1375) mov.f32 %f394, 0f3f4ccccd;   // 0.8
GPGPU-Sim PTX: 38 (potential) branch divergence @  PC=0x1a40 (_1.ptx:1138) bra.uni $LDWendi___isnanf_192_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2040 (_1.ptx:1375) mov.f32 %f394, 0f3f4ccccd;   // 0.8
GPGPU-Sim PTX: 39 (potential) branch divergence @  PC=0x1a58 (_1.ptx:1142) @!%p27 bra $Lt_10_52738;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2040 (_1.ptx:1375) mov.f32 %f394, 0f3f4ccccd;   // 0.8
GPGPU-Sim PTX: 40 (potential) branch divergence @  PC=0x1ab8 (_1.ptx:1155) bra.uni $LDWendi___isnanf_192_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2040 (_1.ptx:1375) mov.f32 %f394, 0f3f4ccccd;   // 0.8
GPGPU-Sim PTX: 41 (potential) branch divergence @  PC=0x1ad0 (_1.ptx:1159) @!%p29 bra $Lt_10_53250;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2040 (_1.ptx:1375) mov.f32 %f394, 0f3f4ccccd;   // 0.8
GPGPU-Sim PTX: 42 (potential) branch divergence @  PC=0x1b20 (_1.ptx:1170) @!%p30 bra $Lt_10_53762;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1b40 (_1.ptx:1177) mov.f32 %f268, %f284;
GPGPU-Sim PTX: 43 (potential) branch divergence @  PC=0x1b48 (_1.ptx:1178) bra.uni $LDWendi___isnanf_192_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2040 (_1.ptx:1375) mov.f32 %f394, 0f3f4ccccd;   // 0.8
GPGPU-Sim PTX: 44 (potential) branch divergence @  PC=0x1b60 (_1.ptx:1183) @!%p31 bra $Lt_10_59394;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2040 (_1.ptx:1375) mov.f32 %f394, 0f3f4ccccd;   // 0.8
GPGPU-Sim PTX: 45 (potential) branch divergence @  PC=0x1b88 (_1.ptx:1188) @!%p32 bra $Lt_10_59394;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2040 (_1.ptx:1375) mov.f32 %f394, 0f3f4ccccd;   // 0.8
GPGPU-Sim PTX: 46 (potential) branch divergence @  PC=0x1ba0 (_1.ptx:1192) bra.uni $LDWendi___isnanf_192_1;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2040 (_1.ptx:1375) mov.f32 %f394, 0f3f4ccccd;   // 0.8
GPGPU-Sim PTX: 47 (potential) branch divergence @  PC=0x1bd8 (_1.ptx:1202) @%p33 bra $Lt_10_54530;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1c20 (_1.ptx:1216) sub.s32 %r64, %r64, 127;
GPGPU-Sim PTX: 48 (potential) branch divergence @  PC=0x1c10 (_1.ptx:1211) bra.uni $Lt_10_54274;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1c20 (_1.ptx:1216) sub.s32 %r64, %r64, 127;
GPGPU-Sim PTX: 49 (potential) branch divergence @  PC=0x1c58 (_1.ptx:1224) @!%p34 bra $Lt_10_54786;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1c78 (_1.ptx:1232) mov.f32 %f302, 0fbf800000;   // -1
GPGPU-Sim PTX: 50 (potential) branch divergence @  PC=0x1eb0 (_1.ptx:1312) @%p35 bra $Lt_10_55298;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1ed8 (_1.ptx:1321) mov.f32 %f367, %f365;
GPGPU-Sim PTX: 51 (potential) branch divergence @  PC=0x1f98 (_1.ptx:1346) @!%p38 bra $Lt_10_55810;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x1fa8 (_1.ptx:1351) mov.f32 %f284, %f386;
GPGPU-Sim PTX: 52 (potential) branch divergence @  PC=0x2018 (_1.ptx:1365) @%p39 bra $Lt_10_56322;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2038 (_1.ptx:1372) mov.f32 %f268, %f284;
GPGPU-Sim PTX: 53 (potential) branch divergence @  PC=0x2158 (_1.ptx:1419) @%p40 bra $L_10_42242;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2170 (_1.ptx:1424) sub.s32 %r86, %r24, 1;
GPGPU-Sim PTX: 54 (potential) branch divergence @  PC=0x2168 (_1.ptx:1421) @%p41 bra $L_10_41474;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2170 (_1.ptx:1424) sub.s32 %r86, %r24, 1;
GPGPU-Sim PTX: 55 (potential) branch divergence @  PC=0x2190 (_1.ptx:1428) @%p42 bra $Lt_10_56834;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2288 (_1.ptx:1464) ld.global.u32 %r92, [%rd4+0];
GPGPU-Sim PTX: 56 (potential) branch divergence @  PC=0x2280 (_1.ptx:1461) @%p43 bra $Lt_10_57346;
GPGPU-Sim PTX:    immediate post dominator      @  PC=0x2288 (_1.ptx:1464) ld.global.u32 %r92, [%rd4+0];
GPGPU-Sim PTX: ... end of reconvergence points for _Z6renderPjP4Nodejjff
GPGPU-Sim PTX: ... done pre-decoding instructions for '_Z6renderPjP4Nodejjff'.
GPGPU-Sim PTX: instruction assembly for function '_ZN4dim3C1Ejjj'...   done.
GPGPU-Sim PTX: finding reconvergence points for '_ZN4dim3C1Ejjj'...
GPGPU-Sim PTX: Finding dominators for '_ZN4dim3C1Ejjj'...
GPGPU-Sim PTX: Finding immediate dominators for '_ZN4dim3C1Ejjj'...
GPGPU-Sim PTX: Finding postdominators for '_ZN4dim3C1Ejjj'...
GPGPU-Sim PTX: Finding immediate postdominators for '_ZN4dim3C1Ejjj'...
GPGPU-Sim PTX: pre-decoding instructions for '_ZN4dim3C1Ejjj'...
GPGPU-Sim PTX: reconvergence points for _ZN4dim3C1Ejjj...
GPGPU-Sim PTX: ... end of reconvergence points for _ZN4dim3C1Ejjj
GPGPU-Sim PTX: ... done pre-decoding instructions for '_ZN4dim3C1Ejjj'.
GPGPU-Sim PTX: finished parsing EMBEDDED .ptx file _1.ptx
Adding _cuobjdump_1.ptx with cubin handle 1
GPGPU-Sim PTX: extracting embedded .ptx to temporary file "_ptx_OSiTJc"
Running: cat _ptx_OSiTJc | sed 's/.version 1.5/.version 1.4/' | sed 's/, texmode_independent//' | sed 's/\(\.extern \.const\[1\] .b8 \w\+\)\[\]/\1\[1\]/' | sed 's/const\[.\]/const\[0\]/g' > _ptx2_qFDdGH
GPGPU-Sim PTX: generating ptxinfo using "$CUDA_INSTALL_PATH/bin/ptxas --gpu-name=sm_20 -v _ptx2_qFDdGH --output-file  /dev/null 2> _ptx_OSiTJcinfo"
GPGPU-Sim PTX: Kernel '_Z6renderPjP4Nodejjff' : regs=45, lmem=4, smem=0, cmem=180
GPGPU-Sim PTX: removing ptxinfo using "rm -f _ptx_OSiTJc _ptx2_qFDdGH _ptx_OSiTJcinfo"
GPGPU-Sim PTX: loading globals with explicit initializers... 
GPGPU-Sim PTX: finished loading globals (0 bytes total).
GPGPU-Sim PTX: loading constants with explicit initializers...  done.
GPGPU-Sim PTX: __cudaRegisterVar: hostVar = 0x62fda0; deviceAddress = MView; deviceName = MView
GPGPU-Sim PTX: __cudaRegisterVar: Registering const memory space of 48 bytes
GPGPU-Sim PTX registering constant MView (48 bytes) to name mapping
GPGPU-Sim PTX: __cudaRegisterVar: hostVar = 0x62fde0; deviceAddress = cnode; deviceName = cnode
GPGPU-Sim PTX: __cudaRegisterVar: Registering const memory space of 160 bytes
GPGPU-Sim PTX registering constant cnode (160 bytes) to name mapping
GPGPU-Sim PTX: cudaMemcpyToSymbol: symbol = 0x62fde0
GPGPU-Sim PTX: starting gpgpu_ptx_sim_memcpy_symbol with hostVar 0x0x62fde0
GPGPU-Sim PTX: gpgpu_ptx_sim_memcpy_symbol: Found PTX symbol w/ hostVar=0x62fde0
GPGPU-Sim PTX: gpgpu_ptx_sim_memcpy_symbol: copying const memory 160 bytes  to  symbol cnode+0 @0x100 ...
GPGPU-Sim PTX: cudaMemcpyToSymbol: symbol = 0x62fda0
GPGPU-Sim PTX: starting gpgpu_ptx_sim_memcpy_symbol with hostVar 0x0x62fda0
GPGPU-Sim PTX: gpgpu_ptx_sim_memcpy_symbol: Found PTX symbol w/ hostVar=0x62fda0
GPGPU-Sim PTX: gpgpu_ptx_sim_memcpy_symbol: copying const memory 48 bytes  to  symbol MView+0 @0x200 ...

GPGPU-Sim PTX: cudaLaunch for 0x0x40ce13 (mode=performance simulation) on stream 0
GPGPU-Sim PTX: pushing kernel '_Z6renderPjP4Nodejjff' to stream 0, gridDim= (16,32,1) blockDim = (16,8,1) 
kernel '_Z6renderPjP4Nodejjff' transfer to GPU hardware scheduler
GPGPU-Sim uArch: Shader 1 bind to kernel 1 '_Z6renderPjP4Nodejjff'
GPGPU-Sim uArch: CTA/core = 5, limited by: regs
GPGPU-Sim uArch: core:  1, cta: 0 initialized @(1,0)
GPGPU-Sim uArch: Shader 2 bind to kernel 1 '_Z6renderPjP4Nodejjff'
GPGPU-Sim uArch: core:  2, cta: 0 initialized @(1,0)
GPGPU-Sim uArch: Shader 3 bind to kernel 1 '_Z6renderPjP4Nodejjff'
GPGPU-Sim uArch: core:  3, cta: 0 initialized @(1,0)
GPGPU-Sim uArch: Shader 4 bind to kernel 1 '_Z6renderPjP4Nodejjff'
GPGPU-Sim uArch: core:  4, cta: 0 initialized @(1,0)
GPGPU-Sim uArch: Shader 5 bind to kernel 1 '_Z6renderPjP4Nodejjff'
GPGPU-Sim uArch: core:  5, cta: 0 initialized @(1,0)
GPGPU-Sim uArch: Shader 6 bind to kernel 1 '_Z6renderPjP4Nodejjff'
GPGPU-Sim uArch: core:  6, cta: 0 initialized @(1,0)
GPGPU-Sim uArch: Shader 7 bind to kernel 1 '_Z6renderPjP4Nodejjff'
GPGPU-Sim uArch: core:  7, cta: 0 initialized @(1,0)
GPGPU-Sim uArch: Shader 8 bind to kernel 1 '_Z6renderPjP4Nodejjff'
GPGPU-Sim uArch: core:  8, cta: 0 initialized @(1,0)
GPGPU-Sim uArch: Shader 9 bind to kernel 1 '_Z6renderPjP4Nodejjff'
GPGPU-Sim uArch: core:  9, cta: 0 initialized @(1,0)
GPGPU-Sim uArch: Shader 10 bind to kernel 1 '_Z6renderPjP4Nodejjff'
GPGPU-Sim uArch: core: 10, cta: 0 initialized @(1,0)
GPGPU-Sim uArch: Shader 11 bind to kernel 1 '_Z6renderPjP4Nodejjff'
GPGPU-Sim uArch: core: 11, cta: 0 initialized @(1,0)
GPGPU-Sim uArch: Shader 12 bind to kernel 1 '_Z6renderPjP4Nodejjff'
GPGPU-Sim uArch: core: 12, cta: 0 initialized @(1,0)
GPGPU-Sim uArch: Shader 13 bind to kernel 1 '_Z6renderPjP4Nodejjff'
GPGPU-Sim uArch: core: 13, cta: 0 initialized @(1,0)
GPGPU-Sim uArch: Shader 14 bind to kernel 1 '_Z6renderPjP4Nodejjff'
GPGPU-Sim uArch: core: 14, cta: 0 initialized @(1,0)
GPGPU-Sim uArch: Shader 0 bind to kernel 1 '_Z6renderPjP4Nodejjff'
GPGPU-Sim uArch: core:  0, cta: 0 initialized @(1,0)
GPGPU-Sim uArch: core:  1, cta: 1 initialized @(2,0)
GPGPU-Sim uArch: core:  2, cta: 1 initialized @(2,0)
GPGPU-Sim uArch: core:  3, cta: 1 initialized @(2,0)
GPGPU-Sim uArch: core:  4, cta: 1 initialized @(2,0)
GPGPU-Sim uArch: core:  5, cta: 1 initialized @(2,0)
GPGPU-Sim uArch: core:  6, cta: 1 initialized @(2,0)
GPGPU-Sim uArch: core:  7, cta: 1 initialized @(2,0)
GPGPU-Sim uArch: core:  8, cta: 1 initialized @(2,0)
GPGPU-Sim uArch: core:  9, cta: 1 initialized @(2,0)
GPGPU-Sim uArch: core: 10, cta: 1 initialized @(2,0)
GPGPU-Sim uArch: core: 11, cta: 1 initialized @(2,0)
GPGPU-Sim uArch: core: 12, cta: 1 initialized @(2,0)
GPGPU-Sim uArch: core: 13, cta: 1 initialized @(2,0)
GPGPU-Sim uArch: core: 14, cta: 1 initialized @(2,0)
GPGPU-Sim uArch: core:  0, cta: 1 initialized @(2,0)
GPGPU-Sim uArch: core:  1, cta: 2 initialized @(3,0)
GPGPU-Sim uArch: core:  2, cta: 2 initialized @(3,0)
GPGPU-Sim uArch: core:  3, cta: 2 initialized @(3,0)
GPGPU-Sim uArch: core:  4, cta: 2 initialized @(3,0)
GPGPU-Sim uArch: core:  5, cta: 2 initialized @(3,0)
GPGPU-Sim uArch: core:  6, cta: 2 initialized @(3,0)
GPGPU-Sim uArch: core:  7, cta: 2 initialized @(3,0)
GPGPU-Sim uArch: core:  8, cta: 2 initialized @(3,0)
GPGPU-Sim uArch: core:  9, cta: 2 initialized @(3,0)
GPGPU-Sim uArch: core: 10, cta: 2 initialized @(3,0)
GPGPU-Sim uArch: core: 11, cta: 2 initialized @(3,0)
GPGPU-Sim uArch: core: 12, cta: 2 initialized @(3,0)
GPGPU-Sim uArch: core: 13, cta: 2 initialized @(3,0)
GPGPU-Sim uArch: core: 14, cta: 2 initialized @(3,0)
GPGPU-Sim uArch: core:  0, cta: 2 initialized @(3,0)
GPGPU-Sim uArch: core:  1, cta: 3 initialized @(4,0)
GPGPU-Sim uArch: core:  2, cta: 3 initialized @(4,0)
GPGPU-Sim uArch: core:  3, cta: 3 initialized @(4,0)
GPGPU-Sim uArch: core:  4, cta: 3 initialized @(4,0)
GPGPU-Sim uArch: core:  5, cta: 3 initialized @(4,0)
GPGPU-Sim uArch: core:  6, cta: 3 initialized @(4,0)
GPGPU-Sim uArch: core:  7, cta: 3 initialized @(4,0)
GPGPU-Sim uArch: core:  8, cta: 3 initialized @(4,0)
GPGPU-Sim uArch: core:  9, cta: 3 initialized @(4,0)
GPGPU-Sim uArch: core: 10, cta: 3 initialized @(4,0)
GPGPU-Sim uArch: core: 11, cta: 3 initialized @(4,0)
GPGPU-Sim uArch: core: 12, cta: 3 initialized @(4,0)
GPGPU-Sim uArch: core: 13, cta: 3 initialized @(4,0)
GPGPU-Sim uArch: core: 14, cta: 3 initialized @(4,0)
GPGPU-Sim uArch: core:  0, cta: 3 initialized @(4,0)
GPGPU-Sim uArch: core:  1, cta: 4 initialized @(5,0)
GPGPU-Sim uArch: core:  2, cta: 4 initialized @(5,0)
GPGPU-Sim uArch: core:  3, cta: 4 initialized @(5,0)
GPGPU-Sim uArch: core:  4, cta: 4 initialized @(5,0)
GPGPU-Sim uArch: core:  5, cta: 4 initialized @(5,0)
GPGPU-Sim uArch: core:  6, cta: 4 initialized @(5,0)
GPGPU-Sim uArch: core:  7, cta: 4 initialized @(5,0)
GPGPU-Sim uArch: core:  8, cta: 4 initialized @(5,0)
GPGPU-Sim uArch: core:  9, cta: 4 initialized @(5,0)
GPGPU-Sim uArch: core: 10, cta: 4 initialized @(5,0)
GPGPU-Sim uArch: core: 11, cta: 4 initialized @(5,0)
GPGPU-Sim uArch: core: 12, cta: 4 initialized @(5,0)
GPGPU-Sim uArch: core: 13, cta: 4 initialized @(5,0)
GPGPU-Sim uArch: core: 14, cta: 4 initialized @(5,0)
GPGPU-Sim uArch: core:  0, cta: 4 initialized @(5,0)
GPGPU-Sim uArch: cycles simulated: 500  inst.: 34112 (ipc=68.2) sim_rate=17056 (inst/sec) elapsed = 0:0:00:02 / Fri Mar  4 03:48:26 2016
GPGPU-Sim uArch: cycles simulated: 2500  inst.: 58912 (ipc=23.6) sim_rate=19637 (inst/sec) elapsed = 0:0:00:03 / Fri Mar  4 03:48:27 2016
